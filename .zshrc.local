# We're on macOS with Homebrew
if which brew &> /dev/null
then
  HB_PREFIX="$(brew --prefix)"
  for BREWGNU in "$HB_PREFIX"/opt/*/libexec/gnubin "$HB_PREFIX/opt/gnu-getopt/bin" /usr/local/sbin /usr/local/bin
  do
    # Prefer GNU coreutils over macOS dumb BSD variants
    if ! echo "$PATH" | grep -q "$BREWGNU"
    then
      export PATH="$BREWGNU:$PATH"
    fi
  done

  # Replace builtin macOS SSH agent
  export SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"

  # Fix TTY
  export GPG_TTY=$(tty)
  gpg-connect-agent updatestartuptty /bye >/dev/null
fi

alias nano='nano -w -i -c'
alias vim='vim -p'
alias V='vim -R -'
alias man='man --locale=C'
# https://github.com/danielauener/git-auf-deutsch
alias depp=git
# remove ag alias from grml
alias ag=true
unalias ag
alias dropbearssh='ssh -o UserKnownHostsFile=.ssh/known_hosts.dropbear -l root -4'
 
dropbearunlock() { dropbearssh "$1" cryptroot-unlock }

alias cgit='ISERV_SRC_DIR="$PWD" igit'

if which brew &> /dev/null
then 
  HB_CNF_HANDLER="$(brew --repository)/Library/Taps/homebrew/homebrew-command-not-found/handler.sh"
  if [ -f "$HB_CNF_HANDLER" ]
  then
    source "$HB_CNF_HANDLER"
  fi
elif [[ -x /usr/lib/command-not-found ]]
then
  function command_not_found_handler() {
    /usr/lib/command-not-found -- "$1"
  }
fi

# No bell
# https://blog.vghaisas.com/zsh-beep-sound/
unsetopt BEEP
# only show matching entries in history search if a letter is already entered
autoload -U history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey "^[[A" history-beginning-search-backward-end
bindkey "^[[B" history-beginning-search-forward-end

# Enable menu for completions
setopt MENU_COMPLETE

# Update dotfiles if running interactively and last update was more than 24 hours ago
if [ -t 0 ] && ([ ! -f ~/.dot_files_update ] || [ ! -z "$(find ~ -maxdepth 1 -name ".dot_files_update" -mmin +1440)" ])
then
  DOTFILES_DIR=~/git/dot-files
  if [ -f ~/.dotfiles_dir ]
  then
    DOTFILES_DIR=$(< ~/.dotfiles_dir)
  fi

  echo "Pulling dot-files from GitHub..." &&
  git -C "$DOTFILES_DIR" pull -q &&
  echo "Done!" &&
  echo "Installing dot-files..." &&
  cd "$DOTFILES_DIR" &&
  ./install.sh &&
  echo "Done!" &&
  cd - > /dev/null &&
  touch ~/.dot_files_update &&
  # Reexec if shell configuration changed
  echo "\nRestarting login shell...\n" &&
  exec -l "$SHELL"
fi

echo "Your personal smartcard is $(whatsmypersonalcard)."
echo "Your work smartcard is $(whatsmyworkcard)."
echo
