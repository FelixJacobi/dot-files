alias nano='nano -w -i -c'
alias vim='vim -p'
alias V='vim -R -'
alias man='man --locale=C'
# https://github.com/danielauener/git-auf-deutsch
alias depp=git
# remove ag alias from grml
alias ag=true
unalias ag

if ! echo $PATH | grep -qE "~/bin" && [ -d ~"/bin" ]
then
  PATH+=":$HOME/bin"
fi

if ! echo $PATH | grep -qE "/opt/jetbrains/bin" && [ -d "/opt/jetbrains/bin" ]
then
  PATH+=":/opt/jetbrains/bin"
fi

export PATH

# import ~/.dpkg-dev (debuild env vars and so far)
if [ -f "$HOME/.dpkg_dev" ]
then
  source "$HOME/.dpkg_dev"

fi

# import ~/.git_author (dynamic git env vars and so far)
if [ -f "$HOME/.dpkg_dev" ]
then
  source "$HOME/.git_author"
fi

if [[ -x /usr/lib/command-not-found ]] ; then
  function command_not_found_handler() {
    /usr/lib/command-not-found -- "$1"
  }
fi

# No bell
# https://blog.vghaisas.com/zsh-beep-sound/
unsetopt BEEP

. ~/.git_iserv_src_dir

export GIT_TAG_CMD="stag"

# only show matching entries in history search if a letter is already entered
autoload -U history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey "^[[A" history-beginning-search-backward-end
bindkey "^[[B" history-beginning-search-forward-end

# Use original gettext messages in shell sessions
if [ -t 0 ]
then
  export LC_MESSAGES=C
fi

SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"
if [ -n "$SSH_AUTH_SOCK" ]
then
  export SSH_AUTH_SOCK
else
  echo "Could not determine path for SSH_AUTH_SOCK!" >&2
  unset SSH_AUTH_SOCK
fi

# Update dotfiles if running interactively and last update was more than 24 hours ago
if [ -t 0 ] && ([ ! -f ~/.dot_files_update ] || [ ! -z "$(find ~ -maxdepth 1 -name ".dot_files_update" -mmin +1440)" ])
then
  DOTFILES_DIR=~/git/dot-files
  if [ -f ~/.dotfiles_dir ]
  then
    DOTFILES_DIR=$(< ~/.dotfiles_dir)
  fi

  echo "Pulling dot-files from GitHub..." &&
  git -C "$DOTFILES_DIR" pull -q &&
  echo "Done!" &&
  echo "Installing dot-files..." &&
  (cd "$DOTFILES_DIR" && ./install.sh | grep --color=never -E "^Creating|^Replacing") &&
  echo "Done!" &&
  touch ~/.dot_files_update &&
  # Reexec if shell configuration changed
  echo "\nRestarting login shell...\n" &&
  exec -l "$SHELL"
fi
